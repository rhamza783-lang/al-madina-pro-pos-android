#!/usr/bin/env sh

#
# Copyright 2015 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##############################################################################
##
##  Gradle start up script for UN*X
##
##############################################################################

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done

APP_HOME=`dirname "$PRG"`

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn () {
    echo "$*"
}

die () {
    echo
    echo "ERROR: $*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
  NONSTOP* )
    nonstop=true
    ;;
esac

# Attempt to find java
if [ -z "$JAVA_HOME" ] ; then
    if $darwin ; then
        [ -x '/usr/libexec/java_home' ] && JAVA_HOME=`/usr/libexec/java_home`
    fi
fi
if [ -z "$JAVA_HOME" ] ; then
    JAVA_PATH=`which java 2>/dev/null`
    if [ "x$JAVA_PATH" != "x" ] ; then
        JAVA_PATH=`dirname "$JAVA_PATH" 2>/dev/null`
        JAVA_HOME=`dirname "$JAVA_PATH" 2>/dev/null`
    fi
fi
if [ -z "$JAVA_HOME" ] ; then
    if [ -x "/usr/bin/java" ] ; then
        JAVA_HOME="/usr"
    fi
fi
if [ -z "$JAVA_HOME" ] ; then
    die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
    [ -n "$APP_HOME" ] &&
        APP_HOME=`cygpath --unix "$APP_HOME"`
    [ -n "$JAVA_HOME" ] &&
        JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
fi

# For MSYS, ensure paths are in UNIX format before anything is touched
if $msys ; then
    [ -n "$APP_HOME" ] &&
        APP_HOME=`( cd "$APP_HOME" && pwd )`
    [ -n "$JAVA_HOME" ] &&
        JAVA_HOME=`( cd "$JAVA_HOME" && pwd )`
fi

# Set APP_BASE_NAME
APP_BASE_NAME=`basename "$0"`

# Increase the maximum file descriptors if we can
if ! $cygwin && ! $darwin && ! $nonstop; then
    if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ]; then
        # use the maximum available
        MAX_FD_LIMIT=`ulimit -H -n`
        if [ $? -eq 0 ] ; then
            if [ "$MAX_FD_LIMIT" != 'unlimited' ] ; then
                ulimit -n $MAX_FD_LIMIT
            fi
        else
            warn "Could not query maximum file descriptor limit"
        fi
    else
        ulimit -n $MAX_FD
    fi
fi

# Add the gradlew properties file to the classpath
GRADLE_PROPERTIES="$APP_HOME/gradle.properties"

# For Cygwin, switch paths to Windows format before running java
if $cygwin ; then
    APP_HOME=`cygpath --path --windows "$APP_HOME"`
    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
    GRADLE_PROPERTIES=`cygpath --path --windows "$GRADLE_PROPERTIES"`
fi

# Collect all arguments for the java command, following the shell quoting and substitution rules
eval set -- "$DEFAULT_JVM_OPTS" "$JAVA_OPTS" "$GRADLE_OPTS" "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$APP_HOME/gradle/wrapper/gradle-wrapper.jar\"" org.gradle.wrapper.GradleWrapperMain "$@"

# Start the wrapper
exec "$JAVA_HOME/bin/java" "$@"
